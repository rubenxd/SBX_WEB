// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SBX_WEB.Data;

namespace SBX_WEB.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20220204022155_VentasEdit2Migration")]
    partial class VentasEdit2Migration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SBX_WEB.Data.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categorias");
                });

            modelBuilder.Entity("SBX_WEB.Data.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DNI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SitioWeb")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("SBX_WEB.Data.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("estados");
                });

            modelBuilder.Entity("SBX_WEB.Data.Kardex", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Cantidad")
                        .HasColumnType("real");

                    b.Property<string>("CodigoBarras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<float>("IVA")
                        .HasColumnType("real");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<int>("Idestado")
                        .HasColumnType("int");

                    b.Property<int>("Idmarca")
                        .HasColumnType("int");

                    b.Property<int>("Idproveedor")
                        .HasColumnType("int");

                    b.Property<int>("IdunidadMedida")
                        .HasColumnType("int");

                    b.Property<int>("Idusuario")
                        .HasColumnType("int");

                    b.Property<float>("Medida")
                        .HasColumnType("real");

                    b.Property<string>("ModoVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Movimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sobres")
                        .HasColumnType("int");

                    b.Property<int>("StockMaximo")
                        .HasColumnType("int");

                    b.Property<int>("StockMinimo")
                        .HasColumnType("int");

                    b.Property<float>("SubCantidad")
                        .HasColumnType("real");

                    b.Property<string>("UM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValorSobre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorSubcantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("categoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("estadoId")
                        .HasColumnType("int");

                    b.Property<int?>("marcaId")
                        .HasColumnType("int");

                    b.Property<int?>("proveedorId")
                        .HasColumnType("int");

                    b.Property<int?>("unidadMedidaId")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("categoriaId");

                    b.HasIndex("estadoId");

                    b.HasIndex("marcaId");

                    b.HasIndex("proveedorId");

                    b.HasIndex("unidadMedidaId");

                    b.HasIndex("usuarioId");

                    b.ToTable("kardexs");
                });

            modelBuilder.Entity("SBX_WEB.Data.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("marcas");
                });

            modelBuilder.Entity("SBX_WEB.Data.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cantidad")
                        .HasColumnType("real");

                    b.Property<string>("CodigoBarras")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("DescuentoP")
                        .HasColumnType("real");

                    b.Property<DateTime>("FechaRegistro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaVencimiento")
                        .HasColumnType("datetime2");

                    b.Property<float>("IVA")
                        .HasColumnType("real");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("Idestado")
                        .HasColumnType("int");

                    b.Property<int>("Idmarca")
                        .HasColumnType("int");

                    b.Property<int>("Idproveedor")
                        .HasColumnType("int");

                    b.Property<int>("IdunidadMedida")
                        .HasColumnType("int");

                    b.Property<int>("Idusuario")
                        .HasColumnType("int");

                    b.Property<float>("Medida")
                        .HasColumnType("real");

                    b.Property<string>("ModoVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Movimiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PrecioVenta")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sobres")
                        .HasColumnType("int");

                    b.Property<int>("StockMaximo")
                        .HasColumnType("int");

                    b.Property<int>("StockMinimo")
                        .HasColumnType("int");

                    b.Property<float>("SubCantidad")
                        .HasColumnType("real");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorSobre")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorSubcantidad")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("categoriaId")
                        .HasColumnType("int");

                    b.Property<int?>("estadoId")
                        .HasColumnType("int");

                    b.Property<int?>("marcaId")
                        .HasColumnType("int");

                    b.Property<int?>("proveedorId")
                        .HasColumnType("int");

                    b.Property<int?>("unidadMedidaId")
                        .HasColumnType("int");

                    b.Property<int?>("usuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("categoriaId");

                    b.HasIndex("estadoId");

                    b.HasIndex("marcaId");

                    b.HasIndex("proveedorId");

                    b.HasIndex("unidadMedidaId");

                    b.HasIndex("usuarioId");

                    b.ToTable("productos");
                });

            modelBuilder.Entity("SBX_WEB.Data.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Ciudad")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("DNI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.Property<string>("SitioWeb")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("telefono")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("proveedores");
                });

            modelBuilder.Entity("SBX_WEB.Data.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DescripcionRol")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rol");
                });

            modelBuilder.Entity("SBX_WEB.Data.UnidadMedida", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("unidadMedidas");
                });

            modelBuilder.Entity("SBX_WEB.Data.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrasena")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DNI")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<string>("NombreUsuario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("rolId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("rolId");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("SBX_WEB.Data.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("Cambio")
                        .HasColumnType("real");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("ConsecutivoDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Costo")
                        .HasColumnType("real");

                    b.Property<float>("Descuento")
                        .HasColumnType("real");

                    b.Property<float>("Efectivo")
                        .HasColumnType("real");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<float>("IVA")
                        .HasColumnType("real");

                    b.Property<string>("ModoVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreDocumento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nota")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("PrecioVenta")
                        .HasColumnType("real");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<float>("Total")
                        .HasColumnType("real");

                    b.Property<string>("UM")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ProductoId");

                    b.ToTable("ventas");
                });

            modelBuilder.Entity("SBX_WEB.Data.Kardex", b =>
                {
                    b.HasOne("SBX_WEB.Data.Categoria", "categoria")
                        .WithMany()
                        .HasForeignKey("categoriaId");

                    b.HasOne("SBX_WEB.Data.Estado", "estado")
                        .WithMany()
                        .HasForeignKey("estadoId");

                    b.HasOne("SBX_WEB.Data.Marca", "marca")
                        .WithMany()
                        .HasForeignKey("marcaId");

                    b.HasOne("SBX_WEB.Data.Proveedor", "proveedor")
                        .WithMany()
                        .HasForeignKey("proveedorId");

                    b.HasOne("SBX_WEB.Data.UnidadMedida", "unidadMedida")
                        .WithMany()
                        .HasForeignKey("unidadMedidaId");

                    b.HasOne("SBX_WEB.Data.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioId");
                });

            modelBuilder.Entity("SBX_WEB.Data.Producto", b =>
                {
                    b.HasOne("SBX_WEB.Data.Categoria", "categoria")
                        .WithMany()
                        .HasForeignKey("categoriaId");

                    b.HasOne("SBX_WEB.Data.Estado", "estado")
                        .WithMany()
                        .HasForeignKey("estadoId");

                    b.HasOne("SBX_WEB.Data.Marca", "marca")
                        .WithMany()
                        .HasForeignKey("marcaId");

                    b.HasOne("SBX_WEB.Data.Proveedor", "proveedor")
                        .WithMany()
                        .HasForeignKey("proveedorId");

                    b.HasOne("SBX_WEB.Data.UnidadMedida", "unidadMedida")
                        .WithMany()
                        .HasForeignKey("unidadMedidaId");

                    b.HasOne("SBX_WEB.Data.Usuario", "usuario")
                        .WithMany()
                        .HasForeignKey("usuarioId");
                });

            modelBuilder.Entity("SBX_WEB.Data.Usuario", b =>
                {
                    b.HasOne("SBX_WEB.Data.Rol", "rol")
                        .WithMany()
                        .HasForeignKey("rolId");
                });

            modelBuilder.Entity("SBX_WEB.Data.Venta", b =>
                {
                    b.HasOne("SBX_WEB.Data.Cliente", "cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SBX_WEB.Data.Producto", "producto")
                        .WithMany()
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
