@page "/ProveedorEditarPage/{Id}"
@using SBX_WEB.Data
@using Radzen;
@inject ProveedorServicio proveedorServicio
@inject NavigationManager NavigationManager
@inject DialogService dialogService

<RadzenTemplateForm TItem="Proveedor" Submit=@OnSubmit Data=@proveedor >
    <RadzenFieldset Text="Editar Cliente">     
          <div class="row">
              <div class="col-md-6">
                  <div class="row  mb-5">
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="DNI" />
            </div>
            <div class="col">
                <RadzenNumeric style="display: block;"  Name="DNI"  @bind-Value=@DNI_ Class="w-100"/>
               <RadzenNumericRangeValidator Component="DNI" Min="0" Max="111113528027" Text="Minimo 1 and maximo 10" Popup=true Style="position: absolute" />  
            </div>
        </div>
        <div class="row mb-5">
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Nombre" />
            </div>
            <div class="col">
                <RadzenTextBox style="display: block;" Name="Nombre" @bind-Value=@proveedor.Nombre Class="w-100"/>
                <RadzenRequiredValidator Component="Nombre" Text="Nombre es requerido" Popup=true Style="position: absolute;"/>
           <RadzenLengthValidator Component="Nombre" Max="50" Text="Maximo 50 caracteres" Popup=true/>
            </div>
        </div>
        <div class="row mb-5">
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Ciudad" />
            </div>
            <div class="col">
                <RadzenTextBox style="display: block;" Name="Ciudad" @bind-Value=@proveedor.Ciudad Class="w-100"/>
                <RadzenLengthValidator Component="Ciudad" Max="50" Text="Maximo 50 caracteres" Popup=true/>
            </div>
        </div>
    
        <div class="row mb-5">
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Direccion" />
            </div>
            <div class="col">
                <RadzenTextBox style="display: block;" Name="Direccion" @bind-Value=@proveedor.Direccion Class="w-100"/>
            <RadzenLengthValidator Component="Direccion" Max="100" Text="Maximo 100 caracteres" Popup=true/>
            </div>
        </div>
              </div>
              <div class="col-md-6">
                  <div class="row mb-5">
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Telefono" />
            </div>
            <div class="col">
                <RadzenNumeric style="width: 100%;" Name="telefono" @bind-Value=@telefono_ Class="w-100"/>
             <RadzenNumericRangeValidator Component="telefono" Min="0" Max="111113528027" Text="Minimo 1 and maximo 10" Popup=true Style="position: absolute" />  
            </div>
        </div>
        <div class="row mb-5">
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Celular" />
            </div>
            <div class="col">
                <RadzenNumeric style="display: block;"  Name="celular" @bind-Value=@celular_ Class="w-100"/>
                <RadzenNumericRangeValidator Component="celular" Min="0" Max="111113528027" Text="Minimo 1 and maximo 10" Popup=true Style="position: absolute" />  
            </div>
        </div>
        <div class="row mb-5">
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Email" />    
            </div>
            <div class="col">
                <RadzenTextBox style="display: block;" Name="Email" @bind-Value=@proveedor.Email Class="w-100"/>
                <RadzenRequiredValidator  Component="Email" Text="Email es requerido" Popup=true  />
                <RadzenEmailValidator Component="Email" Text="Email Incorrecto" Popup=true  />    
                <RadzenLengthValidator Component="Email" Max="100" Text="Maximo 100 caracteres" Popup=true/>
            
            </div>
        </div>    
        <div class="row mb-5">
            <div class="col-md-4 align-items-center d-flex">
                <RadzenLabel Text="Sitio web" />
            </div>
            <div class="col">
                <RadzenTextBox style="width: 100%;" Name="Sitioweb" @bind-Value=@proveedor.SitioWeb Class="w-100"/>
            <RadzenLengthValidator Component="Sitioweb" Max="100" Text="Maximo 100 caracteres" Popup=true/>            
            </div>
        </div>        
              </div>
          </div>                 
    </RadzenFieldset>
    <div class="row justify-content-center">
        <div class="col-md-12 d-flex align-items-end justify-content-center" style="margin-top: 16px;">            
            <RadzenButton ButtonStyle="ButtonStyle.Secondary" ButtonType="ButtonType.Submit" Icon="save" Text="Guardar" style="display: inline-block; margin-left: 10px;" />
            <RadzenButton ButtonStyle="ButtonStyle.Secondary" Icon="cancel" style="display: inline-block; margin-left: 10px;" Text="Cancelar" Click="@Cancel" />
        </div>
    </div>
</RadzenTemplateForm>

@code {
    [Parameter]
    public int Id {get; set;}

    Proveedor proveedor = new Proveedor();
    Proveedor proveedor2 = new Proveedor();

    double DNI_ = 0;
    double telefono_ = 0;
    double celular_ = 0;
    string dniValidar = "";
    string pruebas = "0";
    bool v_ok = true;

    protected override async Task OnInitializedAsync()
    {
        proveedor = await Task.Run(() => proveedorServicio.GetProveedorAsync(Id));
        dniValidar = proveedor.DNI;
        DNI_ = Convert.ToDouble(proveedor.DNI);
        telefono_ = Convert.ToDouble(proveedor.telefono);
        celular_ = Convert.ToDouble(proveedor.Celular);
    }   

    protected async void OnSubmit(Proveedor arg)
    {
        //validar DNI
         arg.DNI = DNI_.ToString();
        if (dniValidar != arg.DNI )
        {
            proveedor2 = await Task.Run(() => proveedorServicio.GetProveedorXDNIAsync(arg.DNI));
            if (proveedor2 == null)
            {
                arg.DNI = DNI_.ToString();
                arg.telefono = telefono_.ToString();
                arg.Celular = celular_.ToString();
                v_ok = await proveedorServicio.UpdateProveedorAsync(arg);
                if (v_ok)
                {
                    NavigationManager.NavigateTo("ProveedorPage");
                }
            }
            else
            {
                await ShowInlineDialog(arg.DNI);
            }
        }
        else
        {
            arg.DNI = DNI_.ToString();
            arg.telefono = telefono_.ToString();
            arg.Celular = celular_.ToString();
             v_ok = await proveedorServicio.UpdateProveedorAsync(arg);
                if (v_ok)
                {
                    NavigationManager.NavigateTo("ProveedorPage");
                }
        }

    }
       async Task ShowInlineDialog(string DNI)
    {
        var result = await dialogService.OpenAsync("Informacion", ds =>
    @<div>
        <p class="mb-4">DNI: <b>@DNI</b> ya existe </p>
        <div class="row">
            <div class="col">
                <RadzenButton Text="Ok" Click="() => ds.Close(false)" Class="mr-1" Style="width: 80px;" />
            </div>
        </div>
    </div>
    );

        if (result == null)
        {
            result = false;
        }
        if (result)
        {

        }
    }
    void Cancel()
    {
        NavigationManager.NavigateTo("ProveedorPage",true);
    }
}
