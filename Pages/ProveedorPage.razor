@page "/ProveedorPage"
@using SBX_WEB.Data
@using Radzen;
@inject ProveedorServicio proveedorServicio
@inject DialogService dialogService
@inject NavigationManager NavigationManager

<div class="row">
    <div class="col-md-6">
        <div class="row">
            <div class="col-1">
                <RadzenButton Icon="add" ButtonStyle="ButtonStyle.Secondary" Click="@Registro" Text="" />
            </div>
            <div class="col-1">
                <RadzenButton Icon="update" ButtonStyle="ButtonStyle.Secondary" Click="@Actualizar" Text="" />
            </div>
        </div>
    </div>  
</div>

<br />
<RadzenDataGrid  @ref="ordersGrid" AllowFiltering="true" AllowPaging="true" PageSize="6" AllowSorting="true"
                Data="@ProveedorObj" TItem="Proveedor" AllowColumnResize="true" IsLoading=@isLoading>
    <Columns>
        <RadzenDataGridColumn TItem="Proveedor" Property="DNI" Title="DNI" Width="80px" />
        <RadzenDataGridColumn TItem="Proveedor" Property="Nombre" Title="Nombre" Width="140px" />
        <RadzenDataGridColumn TItem="Proveedor" Property="Direccion" Title="Direccion" Width="140px" />
        <RadzenDataGridColumn TItem="Proveedor" Property="Celular" Title="Celular" Width="120px" />
        <RadzenDataGridColumn Width="50px" TItem="Proveedor" Property="Id" Title="">
            <Template Context="data">
                <RadzenButton Icon="create" ButtonStyle="ButtonStyle.Secondary" Class="m-1" Click=@(() => Editar(data.Id,data.DNI,data.Nombre)) />
            </Template>
        </RadzenDataGridColumn>
         <RadzenDataGridColumn Width="50px" TItem="Proveedor" Property="Id" Title="">
            <Template Context="data">
                <RadzenButton Icon="delete" ButtonStyle="ButtonStyle.Danger" Class="m-1"  Click=@(() => ShowInlineDialog(data.Id,data.DNI,data.Nombre))/>
            </Template>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {
    RadzenDataGrid<Proveedor> ordersGrid;
    bool isLoading = false;
    bool resultDialog;
    int IdGlobal = 0;
    List<Data.Proveedor> ProveedorObj = new List<Data.Proveedor>();
    Data.Proveedor ProveedorObjEliminar = new Data.Proveedor();

    List<Data.Proveedor> ProveedorObjVerificar = new List<Data.Proveedor>();
    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        ProveedorObj = await Task.Run(() => proveedorServicio.GetAllProveedorAsync());
        ProveedorObjVerificar = ProveedorObj;
        isLoading = false;
    }
    async Task Editar(int Id,string DNI, string Nombre)
    {        
        await dialogService.OpenAsync<ClienteEditarPage>($"{DNI} - {Nombre}",
               new Dictionary<string, object>() { { "Id", Id } },
               new DialogOptions() { Width = "60%",Height="85%" });
        NavigationManager.NavigateTo("ProveedorPage",true);
    } 
    async Task Registro()
    {
        await dialogService.OpenAsync<ClienteCrearPage>($"",
               new Dictionary<string, object>() { },
               new DialogOptions() { Width = "60%",Height="85%" });
        await Actualizar();
    } 
    async Task  Actualizar()
    {
        isLoading = true;
        ProveedorObj = await Task.Run(() => proveedorServicio.GetAllProveedorAsync());
        isLoading = false;
    }

    async Task Eliminar(int Id,string DNI, string Nombre)
    {
        ProveedorObjEliminar = await Task.Run(() => proveedorServicio.GetProveedorAsync(Id));
        await  proveedorServicio.EliminarProveedorAsync(ProveedorObjEliminar);
        await Actualizar();
    } 
      async Task ShowInlineDialog(int Id,string DNI, string Nombre)
    {
     var result = await dialogService.OpenAsync("Confirmacion", ds =>
        @<div>
            <p class="mb-4">Estas seguro de Elimiar al proveedor  <b>@DNI</b><b>-</b><b>@Nombre</b> ?</p>
            <div class="row">
                <div class="col">
                    <RadzenButton Text="Ok" Click="() => ds.Close(true)" Class="mr-1" Style="width: 80px;" />
                    <RadzenButton Text="Cancelar" Click="() => ds.Close(false)" ButtonStyle="ButtonStyle.Secondary" Class="mr-1" />                  
                </div>
            </div>
    </div>
       );

        if(result == null)
        {
            result = false;
        }       
        if (result)
        {
            await Eliminar(Id, DNI, Nombre);
        }
    }
}
